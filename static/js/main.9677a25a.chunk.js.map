{"version":3,"sources":["reportWebVitals.ts","hooks/useDarkTheme.tsx","components/animated/MountTransition.tsx","components/animated/AnimatedRoutes.tsx","models/schema.ts","models/Project.ts","models/Task.ts","contexts/database.tsx","utils/getTextColorFromBackgroundColor.ts","components/ProjectItem.tsx","components/SimpleActionButton.tsx","components/SimpleHeader.tsx","pages/Home.tsx","components/form/InputField.tsx","components/form/Button.tsx","utils/getFormInputValues.ts","pages/Create.tsx","components/Header.tsx","utils/getDayCount.ts","utils/sortTaskList.ts","contexts/project.tsx","utils/getMonthListFromTaskList.ts","components/TaskInfo.tsx","components/TaskItem.tsx","components/TaskTimelineContainer.tsx","components/TaskTimeline.tsx","components/form/Select.tsx","pages/Project.tsx","components/form/ToggleSwitch.tsx","pages/Settings.tsx","pages/ProjectSettings.tsx","pages/Export.tsx","components/animated/OpenIn.tsx","components/Modal.tsx","pages/Task.tsx","routes.tsx","App.tsx","index.tsx","serviceWorker.ts"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useDarkTheme","useState","darkTheme","setDarkTheme","themeKey","useEffect","localStorageValue","localStorage","getItem","storedTheme","JSON","parse","setItem","stringify","document","body","setAttribute","MountTransition","children","slide","slideUp","motion","div","className","exit","opacity","x","y","initial","animate","RouteTransition","exact","path","rest","AnimatedRoutes","exitBeforeEnter","location","useLocation","AnimatePresence","pathname","appSchema","version","tables","tableSchema","name","columns","type","isIndexed","ProjectModel","field","Model","table","associations","tasks","foreignKey","TaskModel","date","relation","DatabaseContext","createContext","DatabaseProvider","adapter","LokiJSAdapter","schema","useWebWorker","useIncrementalIndexedDB","database","Database","modelClasses","actionsEnabled","Provider","value","useDatabase","context","useContext","Error","getTextColorFromBackgroundColor","backgroundColor","hex","intHex","parseInt","split","r","g","b","convertHexToRgb","ProjectItem","handleUserClick","color","title","subtitle","textColor","onClick","onKeyDown","role","tabIndex","style","size","SimpleActionButton","icon","props","Icon","SimpleHeader","backTo","showSettings","history","useHistory","FiArrowLeft","push","FiSettings","Home","projects","setProjects","a","get","query","fetch","getProjects","id","lineHeight","map","project","emoji","InputField","label","htmlFor","Button","primary","getFormInputValues","form","formData","formInputs","getElementsByTagName","inputIndex","length","input","inputName","getAttribute","Create","selectedEmoji","setSelectedEmoji","emojiMenuIsOpen","setEmojiMenuIsOpen","event","console","log","preventDefault","currentTarget","project_id","projectsCollection","collections","action","create","createdProject","reset","onSubmit","position","top","left","display","native","onSelect","showPreview","autoFocus","theme","placeholder","autoComplete","required","Header","projectId","to","getDayCount","start","end","getTime","sortTaskList","taskList","sort","ProjectContext","ProjectProvider","setProject","setTasks","months","setMonths","newProjectData","update","projectData","updatedProject","selectedProject","projectTasks","destroyPermanently","task","getTaskData","find","taskData","newTask","createdTask","newTaskData","task_id","selectedTask","filter","item","monthList","firstMonthValue","lastMonthValue","forEach","Date","setDate","year","getFullYear","month","getMonth","dayCount","getDate","setMonth","getMonthListFromTaskList","editProject","deleteProject","addNewTask","editTask","removeTask","getAndSetProjectDataFromId","useProject","TaskInfo","borderColor","TaskItem","daySize","firstTimelineDay","width","setWidth","offset","setOffset","undefined","marginLeft","toLocaleDateString","day","TaskTimelineContainer","container","TaskTimeline","minWidth","index","Array","fill","Select","options","setValue","isOpen","setIsOpen","onBlur","setTimeout","Object","keys","key","Project","setDaySize","showUpdateConfirmationButton","setShowUpdateConfirmationButton","projectEmoji","setProjectEmoji","projectTitle","setProjectTitle","projectDescription","setProjectDescription","useParams","Swal","fire","text","setProjectData","maxLength","minLength","onChange","ToggleSwitch","isChecked","setIsChecked","checked","Settings","goBack","ProjectSettings","showCancelButton","confirmButtonText","result","isConfirmed","Export","timelineRef","useRef","createDiagramImage","current","html2canvas","scale","allowTaint","useCORS","canvas","data","toDataURL","newData","replace","downloadImage","url","link","createElement","href","download","join","createEvent","e","initEvent","dispatchEvent","html","onOpen","onBeforeOpen","showLoading","showConfirmButton","ref","OpenIn","isActive","height","overflow","Modal","modalIsOpen","TaskPage","defaultDate","setHours","colorModalIsOpen","setColorModalIsOpen","setTitle","setColor","setStart","setEnd","returnToProjectPage","handleDateChange","error","oldDate","setTaskData","FiX","toISOString","Routes","App","ReactDOM","render","StrictMode","getElementById","navigator","window","addEventListener","serviceWorker","register","registration","payload","performance","getEntriesByType","installing","postMessage","catch","err"],"mappings":"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","file":"static/js/main.9677a25a.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from 'react';\n\ninterface useDarkThemeProps {\n  // eslint-disable-next-line no-unused-vars\n  setDarkTheme: (arg0: boolean) => void;\n  darkTheme: boolean;\n}\n\nconst useDarkTheme = (): useDarkThemeProps => {\n  const [darkTheme, setDarkTheme] = useState(false);\n  const themeKey = '@iamtheluiz-gantt-organon/theme';\n\n  useEffect(() => {\n    const localStorageValue = localStorage.getItem(themeKey) || null;\n    const storedTheme: boolean | null = localStorageValue ? JSON.parse(localStorageValue) : null;\n\n    if (storedTheme) {\n      setDarkTheme(storedTheme);\n    } else {\n      localStorage.setItem(themeKey, JSON.stringify(darkTheme));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(themeKey, JSON.stringify(darkTheme));\n    document.body.setAttribute('class', darkTheme ? 'dark' : '');\n  }, [darkTheme]);\n\n  return {\n    darkTheme,\n    setDarkTheme,\n  };\n};\n\nexport default useDarkTheme;\n","/* eslint-disable import/prefer-default-export */\nimport { FC } from 'react';\nimport { motion } from 'framer-motion';\n\ntype Props = {\n  slide?: number\n  slideUp?: number\n}\n\nexport const MountTransition: FC<Props> = ({\n  children,\n  slide = 0,\n  slideUp = 0,\n}) => (\n  <motion.div\n    className=\"w-full\"\n    exit={{ opacity: 0, x: slide, y: slideUp }}\n    initial={{ opacity: 0, x: slide, y: slideUp }}\n    animate={{ opacity: 1, x: 0, y: 0 }}\n  >\n    {children}\n  </motion.div>\n);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { FC } from 'react';\nimport { AnimatePresence } from 'framer-motion';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { MountTransition } from './MountTransition';\n\ntype Props = {\n  exact?: boolean\n  path: string\n  slide?: number\n  slideUp?: number\n}\n\nexport const RouteTransition: FC<Props> = ({\n  children,\n  exact = false,\n  path,\n  slide = 0,\n  slideUp = 0,\n  ...rest\n}) => (\n  <Route exact={exact} path={path} {...rest}>\n    <MountTransition slide={slide} slideUp={slideUp}>\n      {children}\n    </MountTransition>\n  </Route>\n);\n\ntype RoutesProps = {\n  exitBeforeEnter?: boolean\n  initial?: boolean\n}\n\nexport const AnimatedRoutes: FC<RoutesProps> = ({\n  children,\n  exitBeforeEnter = true,\n  initial = false,\n}) => {\n  const location = useLocation();\n  return (\n    <AnimatePresence exitBeforeEnter={exitBeforeEnter} initial={initial}>\n      <Switch location={location} key={location.pathname}>\n        {children}\n      </Switch>\n    </AnimatePresence>\n  );\n};\n","import { appSchema, tableSchema } from '@nozbe/watermelondb';\r\n\r\nexport default appSchema({\r\n  version: 1,\r\n  tables: [\r\n    tableSchema({\r\n      name: 'projects',\r\n      columns: [\r\n        { name: 'title', type: 'string' },\r\n        { name: 'subtitle', type: 'string' },\r\n        { name: 'emoji', type: 'string' },\r\n      ],\r\n    }),\r\n    tableSchema({\r\n      name: 'tasks',\r\n      columns: [\r\n        { name: 'name', type: 'string' },\r\n        { name: 'color', type: 'string' },\r\n        { name: 'start', type: 'number' },\r\n        { name: 'end', type: 'number' },\r\n        { name: 'project_id', type: 'string', isIndexed: true },\r\n      ],\r\n    }),\r\n  ],\r\n});\r\n","import { Model } from '@nozbe/watermelondb';\r\nimport { field, children } from '@nozbe/watermelondb/decorators';\r\n\r\nexport default class ProjectModel extends Model {\r\n  static table = 'projects'\r\n\r\n  public static associations: any = {\r\n    tasks: { type: 'has_many', foreignKey: 'project_id' },\r\n  };\r\n\r\n  @field('title')\r\n  title!: string;\r\n\r\n  @field('subtitle')\r\n  subtitle!: string;\r\n\r\n  @field('emoji')\r\n  emoji!: string;\r\n\r\n  @children('tasks') tasks: any;\r\n}\r\n","import { Model } from '@nozbe/watermelondb';\r\nimport { field, date, relation } from '@nozbe/watermelondb/decorators';\r\nimport ProjectModel from './Project';\r\n\r\nexport default class TaskModel extends Model {\r\n  static table = 'tasks'\r\n\r\n  @field('name')\r\n  name!: string;\r\n\r\n  @field('color')\r\n  color!: string;\r\n\r\n  @date('start')\r\n  start!: Date;\r\n\r\n  @date('end')\r\n  end!: Date;\r\n\r\n  @relation('projects', 'project_id') project!: ProjectModel;\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { createContext, useContext } from 'react';\r\n\r\nimport { Database } from '@nozbe/watermelondb';\r\nimport LokiJSAdapter from '@nozbe/watermelondb/adapters/lokijs';\r\n\r\nimport schema from '../models/schema';\r\nimport ProjectModel from '../models/Project';\r\nimport TaskModel from '../models/Task';\r\n\r\ninterface DatabaseContextProps {\r\n  database: Database\r\n}\r\n\r\nconst DatabaseContext = createContext<DatabaseContextProps>({} as DatabaseContextProps);\r\n\r\nconst DatabaseProvider: React.FC = ({ children }) => {\r\n  // Watermelon Setup\r\n  const adapter = new LokiJSAdapter({\r\n    schema,\r\n    useWebWorker: false,\r\n    useIncrementalIndexedDB: true,\r\n  });\r\n\r\n  const database = new Database({\r\n    adapter,\r\n    modelClasses: [\r\n      ProjectModel,\r\n      TaskModel,\r\n    ],\r\n    actionsEnabled: true,\r\n  });\r\n\r\n  return (\r\n    <DatabaseContext.Provider value={{\r\n      database,\r\n    }}\r\n    >\r\n      {children}\r\n    </DatabaseContext.Provider>\r\n  );\r\n};\r\n\r\nfunction useDatabase(): DatabaseContextProps {\r\n  const context = useContext(DatabaseContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useDatabase must be used within a DatabaseProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { DatabaseProvider, useDatabase };\r\n","/* eslint-disable no-bitwise */\n\n/**\n * Convert hexadecimal string to a object with rgb values\n * @param backgroundColor Hexadecimal color\n */\nexport function convertHexToRgb(hex: string): {r: number, g: number, b: number} {\n  const intHex = parseInt(hex.split('#')[1], 16);\n\n  const r = (intHex >> 16) & 255;\n  const g = (intHex >> 8) & 255;\n  const b = intHex & 255;\n\n  return { r, g, b };\n}\n\n/**\n * Return 'black' or 'white' based on hexadecimal background color\n * @param backgroundColor Hexadecimal color\n */\nexport default function getTextColorFromBackgroundColor(backgroundColor: string): 'white' | 'black' {\n  const { r, g, b } = convertHexToRgb(backgroundColor);\n\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\n  return (yiq >= 128) ? 'black' : 'white';\n}\n","import React, { CSSProperties } from 'react';\r\nimport { HiOutlineArrowNarrowRight } from 'react-icons/hi';\r\n\r\nimport '../styles/components/ProjectItem.css';\r\nimport getTextColorFromBackgroundColor from '../utils/getTextColorFromBackgroundColor';\r\n\r\ninterface ProjectItemProps {\r\n  handleUserClick: () => void;\r\n  color?: string;\r\n  title: string;\r\n  subtitle: string;\r\n}\r\n\r\nexport const ProjectItem: React.FC<ProjectItemProps> = ({\r\n  handleUserClick, color = 'var(--primary-purple)', title, subtitle, children,\r\n}) => {\r\n  const textColor = getTextColorFromBackgroundColor(color);\r\n\r\n  return (\r\n    <div className=\"m-2\">\r\n      <div\r\n        className=\"projectItem relative w-full h-0 bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 mb-2 transition-all duration-200 cursor-pointer\"\r\n        onClick={handleUserClick}\r\n        onKeyDown={handleUserClick}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        style={{ '--active-color': color } as CSSProperties}\r\n      >\r\n        <div className=\"content absolute top-0 left-0 w-full h-full flex flex-col items-center justify-center gap-1\">\r\n          {children}\r\n          <strong className=\"text-base text-center text-gray-700 dark:text-gray-300\">{title}</strong>\r\n        </div>\r\n        <div className=\"overlay absolute top-0 transition-all w-full h-full p-2 flex flex-col items-center justify-center\">\r\n          <span className={`text-base text-center transition-all ${textColor === 'black' ? 'text-gray-900' : 'text-gray-100'}`}>\r\n            {subtitle}\r\n          </span>\r\n          <HiOutlineArrowNarrowRight\r\n            className={`text-base text-center text-gray-100 ${textColor === 'black' ? 'text-gray-900' : 'text-gray-100'}`}\r\n            size={20}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectItem;\r\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { HTMLAttributes } from 'react';\nimport { IconType } from 'react-icons';\n\nimport '../styles/components/SimpleActionButton.css';\n\ninterface SimpleActionButtonProps extends HTMLAttributes<HTMLButtonElement> {\n  icon: IconType\n}\n\nconst SimpleActionButton: React.FC<SimpleActionButtonProps> = ({ icon, ...props }) => {\n  const Icon = icon;\n\n  return (\n    <button type=\"button\" className=\"linkHover w-7 flex justify-center items-center\" {...props}>\n      <Icon className=\"w-full h-full text-gray-700 dark:text-gray-300\" />\n    </button>\n  );\n};\n\nexport default SimpleActionButton;\n","import React from 'react';\nimport { FiArrowLeft, FiSettings } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\nimport SimpleActionButton from './SimpleActionButton';\n\ninterface SimpleHeaderProps {\n  backTo?: string;\n  showSettings?: boolean;\n}\n\nconst SimpleHeader: React.FC<SimpleHeaderProps> = ({\n  backTo = '', showSettings = false, children,\n}) => {\n  const history = useHistory();\n\n  return (\n    <header className=\"flex justify-between w-full py-4 rounded-lg\">\n      {backTo !== '' ? (\n        <SimpleActionButton\n          icon={FiArrowLeft}\n          onClick={() => history.push(backTo)}\n        />\n      ) : (children || <div className=\"w-7\" />)}\n      {showSettings && (\n        <SimpleActionButton\n          icon={FiSettings}\n          onClick={() => history.push('/settings')}\n        />\n      )}\n    </header>\n  );\n};\n\nexport default SimpleHeader;\n","import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport { AiOutlineSchedule } from 'react-icons/ai';\r\nimport { useDatabase } from '../contexts/database';\r\n\r\nimport ProjectItem from '../components/ProjectItem';\r\n\r\nimport '../styles/pages/Home.css';\r\nimport SimpleHeader from '../components/SimpleHeader';\r\nimport ProjectModel from '../models/Project';\r\n\r\nfunction Home() {\r\n  const [projects, setProjects] = useState<ProjectModel[]>([]);\r\n  const history = useHistory();\r\n  const { database } = useDatabase();\r\n\r\n  useEffect(() => {\r\n    async function getProjects() {\r\n      setProjects(await database.get<ProjectModel>('projects').query().fetch());\r\n    }\r\n\r\n    getProjects();\r\n  }, []);\r\n\r\n  function handleNavigateToCreateNewProject() {\r\n    history.push('/create');\r\n  }\r\n\r\n  function handleNavigateToProject(id: string) {\r\n    history.push(`/project/${id}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative flex justify-center items-center dark:bg-black w-full min-h-screen h-full\">\r\n      <div className=\"absolute w-full top-0 left-0 px-4\">\r\n        <SimpleHeader showSettings />\r\n      </div>\r\n      <section id=\"home\" className=\"flex justify-center items-center flex-col w-full max-w-xl p-4\">\r\n        <header className=\"text-center w-full\">\r\n          <div className=\"flex flex-row items-center justify-center mb-2\">\r\n            <AiOutlineSchedule className=\"text-6xl font-bold text-gray-800 dark:text-gray-200\" />\r\n            <h1\r\n              className=\"text-3xl font-bold text-gray-800 dark:text-gray-200 text-left ml-1\"\r\n              style={{ lineHeight: '2rem' }}\r\n            >\r\n              Gantt\r\n              <br />\r\n              Organon\r\n            </h1>\r\n          </div>\r\n          <span className=\"text-lg font-light text-gray-600 dark:text-gray-300\">Project Schedule in WEB</span>\r\n        </header>\r\n        <div className=\"w-full mt-8 overflow-y-auto max-h-96\">\r\n          <ul className=\"grid grid-cols-2 md:grid-cols-3 list-none gap-2\">\r\n            <li>\r\n              <ProjectItem\r\n                handleUserClick={handleNavigateToCreateNewProject}\r\n                title=\"Create Project\"\r\n                subtitle=\"New project schedule\"\r\n                color=\"#359756\"\r\n              >\r\n                <FiPlus className=\"text-gray-700 dark:text-gray-300\" />\r\n              </ProjectItem>\r\n            </li>\r\n            {projects.map((project) => (\r\n              <li key={project.id}>\r\n                <ProjectItem\r\n                  handleUserClick={() => handleNavigateToProject(project.id)}\r\n                  title={project.title}\r\n                  subtitle={project.subtitle}\r\n                >\r\n                  <span>{project.emoji}</span>\r\n                </ProjectItem>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { HTMLProps } from 'react';\n\ninterface InputFieldProps extends HTMLProps<HTMLInputElement> {\n  label: string;\n  id: string;\n}\n\nconst InputField: React.FC<InputFieldProps> = ({\n  label, id, type = 'text', ...props\n}) => (\n  <div className=\"flex flex-1 flex-col py-2\">\n    <label htmlFor={id} className=\"pb-1 text-base font-medium text-gray-800 dark:text-gray-400\">{label}</label>\n    <input\n      id={id}\n      style={{ backgroundColor: '#dde9f3' }}\n      className=\"placeholder-gray-400 border-gray-300 dark:border-gray-400 border-b-2 text-base px-2.5 py-3.5 rounded-md\"\n      type={type}\n      {...props}\n    />\n  </div>\n);\n\nexport default InputField;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { HTMLProps } from 'react';\n\nimport '../../styles/components/Button.css';\n\ninterface ButtonProps extends HTMLProps<HTMLButtonElement> {\n  type: 'submit' | 'button' | 'reset' | undefined,\n  primary?: boolean;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  type, primary = false, children, className = '', ...props\n}) => (\n  <button\n    type={type}\n    className={`button ${primary ? 'primary' : ''} flex justify-center items-center shadow-md ${className}`}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","export default function getFormInputValues(form: HTMLFormElement): Record<string, string> {\r\n  const formData: Record<string, string> = {};\r\n  const formInputs = form.getElementsByTagName('input');\r\n\r\n  for (let inputIndex = 0; inputIndex < formInputs.length; inputIndex++) {\r\n    const input = formInputs[inputIndex];\r\n    const inputName = input.getAttribute('name');\r\n\r\n    if (inputName !== null) {\r\n      formData[inputName] = input.value;\r\n    }\r\n  }\r\n\r\n  return formData;\r\n}\r\n","import { FormEvent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Picker } from 'emoji-mart';\r\n\r\n// Components\r\nimport InputField from '../components/form/InputField';\r\nimport Button from '../components/form/Button';\r\nimport SimpleHeader from '../components/SimpleHeader';\r\n\r\n// Utilities\r\nimport getFormInputValues from '../utils/getFormInputValues';\r\n\r\n// Contexts\r\nimport { useDatabase } from '../contexts/database';\r\n\r\n// Models\r\nimport ProjectModel from '../models/Project';\r\n\r\n// Styles\r\nimport '../styles/pages/Create.css';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport useDarkTheme from '../hooks/useDarkTheme';\r\n\r\nfunction Create() {\r\n  const [selectedEmoji, setSelectedEmoji] = useState<string>('🚀');\r\n  const [emojiMenuIsOpen, setEmojiMenuIsOpen] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const { database } = useDatabase();\r\n  const { darkTheme } = useDarkTheme();\r\n\r\n  async function handleFormSubmit(event: FormEvent<HTMLFormElement>) {\r\n    console.log('oi');\r\n    event.preventDefault();\r\n\r\n    const form = event.currentTarget;\r\n    const formData = getFormInputValues(form);\r\n    let project_id = '';\r\n\r\n    const projectsCollection = database.collections.get<ProjectModel>('projects');\r\n\r\n    await database.action(async () => {\r\n      const createdProject = await projectsCollection.create((project) => {\r\n        project.title = formData.title;\r\n        project.subtitle = formData.subtitle;\r\n        project.emoji = formData.emoji;\r\n      });\r\n\r\n      project_id = createdProject.id;\r\n    });\r\n\r\n    form.reset();\r\n\r\n    if (project_id !== '') {\r\n      history.push(`/project/${project_id}`);\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center w-full min-h-screen overflow-y-auto px-4\">\r\n      <section id=\"create\" className=\"max-w-lg w-full px-4\">\r\n        <SimpleHeader backTo=\"/\" />\r\n        <form onSubmit={handleFormSubmit}>\r\n          <div className=\"w-full pt-4 pb-6\">\r\n            <div className=\"flex flex-row items-center\">\r\n              <div className=\"relative input-field flex flex-col py-2\">\r\n                <button type=\"button\" className=\"text-3xl mr-2\" onClick={() => setEmojiMenuIsOpen(!emojiMenuIsOpen)}>\r\n                  {selectedEmoji}\r\n                </button>\r\n                <Picker\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: '0px',\r\n                    left: '40px',\r\n                    display: emojiMenuIsOpen ? 'initial' : 'none',\r\n                  }}\r\n                  title=\"\"\r\n                  native\r\n                  emoji={selectedEmoji}\r\n                  onSelect={(emoji: any) => {\r\n                    setSelectedEmoji(emoji.native ?? '🚀');\r\n                    setEmojiMenuIsOpen(false);\r\n                  }}\r\n                  showPreview={false}\r\n                  autoFocus={false}\r\n                  theme={darkTheme ? 'dark' : 'light'}\r\n                />\r\n                <input type=\"hidden\" id=\"emoji\" name=\"emoji\" placeholder=\"Ex: Rocket\" value={selectedEmoji} />\r\n              </div>\r\n              <h1 className=\"text-4xl font-semibold text-gray-700 dark:text-gray-300\">Create new Project</h1>\r\n            </div>\r\n            <InputField\r\n              id=\"title\"\r\n              name=\"title\"\r\n              placeholder=\"Ex: Rocket\"\r\n              label=\"Title\"\r\n              autoComplete=\"off\"\r\n              required\r\n            />\r\n            <InputField\r\n              id=\"subtitle\"\r\n              name=\"subtitle\"\r\n              placeholder=\"Ex: Send rockets to mars\"\r\n              label=\"Subtitle\"\r\n              autoComplete=\"off\"\r\n              required\r\n            />\r\n          </div>\r\n          <footer className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n            <Button className=\"text-gray-800 dark:text-gray-600\" type=\"reset\" style={{ backgroundColor: '#dde9f3' }}>\r\n              Clear\r\n            </Button>\r\n            <Button className=\"text-white\" type=\"submit\" primary>Create</Button>\r\n          </footer>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft, FiSettings } from 'react-icons/fi';\n\ninterface HeaderProps {\n  projectId: string;\n  backTo: string;\n}\n\nconst Header: React.FC<HeaderProps> = ({\n  backTo, children, projectId,\n}) => (\n  <header className=\"flex justify-center w-full bg-white dark:bg-gray-800 shadow-md\">\n    <div className=\"max-w-screen-2xl w-full flex justify-between p-4\">\n      <div className=\"flex flex-1 items-center\">\n        <Link to={backTo} className=\"linkHover w-7 flex justify-center items-center\">\n          <FiArrowLeft className=\"w-full h-full text-gray-700 dark:text-gray-300\" />\n        </Link>\n        {children}\n      </div>\n      <Link to={`/settings/${projectId}`} className=\"linkHover w-7 flex justify-center items-center\">\n        <FiSettings className=\"w-full h-full text-gray-700 dark:text-gray-300\" />\n      </Link>\n    </div>\n  </header>\n);\n\nexport default Header;\n","export const millisecondsInOneDay = 24 * 60 * 60 * 1000;\r\n\r\nexport default function getDayCount(start: Date, end: Date) {\r\n  return ((end.getTime() - start.getTime()) / millisecondsInOneDay) + 1;\r\n}\r\n","import { Task } from '../contexts/project';\r\nimport getDayCount from './getDayCount';\r\n\r\nexport default function sortTaskList(taskList: Task[]) {\r\n  taskList.sort((a, b) => a.start.getTime() - b.start.getTime() || getDayCount(b.start, b.end) - getDayCount(a.start, a.end));\r\n\r\n  return taskList;\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  createContext, useContext, useEffect, useState,\r\n} from 'react';\r\nimport { useDatabase } from './database';\r\n\r\n// Utils\r\nimport sortTaskList from '../utils/sortTaskList';\r\nimport getMonthListFromTaskList, { Month } from '../utils/getMonthListFromTaskList';\r\n\r\n// Models\r\nimport ProjectModel from '../models/Project';\r\nimport TaskModel from '../models/Task';\r\n\r\nexport type ProjectDTO = {\r\n  title: string;\r\n  subtitle: string;\r\n  emoji: string;\r\n}\r\n\r\nexport type Task = {\r\n  id?: string;\r\n  name: string;\r\n  color: string;\r\n  start: Date;\r\n  end: Date;\r\n}\r\n\r\ninterface ProjectContextProps {\r\n  tasks: Task[];\r\n  months: Month[];\r\n  project: ProjectModel;\r\n  setTasks: (arg0: Task[]) => void;\r\n  setMonths: (arg0: Month[]) => void;\r\n  setProject: (arg0: ProjectModel) => void;\r\n  getTaskData: (id: string) => Promise<TaskModel>;\r\n  editProject: (project: ProjectDTO) => Promise<boolean>;\r\n  deleteProject: (project: ProjectModel) => Promise<boolean>;\r\n  addNewTask: (task: Task, project_id: string) => void;\r\n  editTask: (task: Task, task_id: string) => void;\r\n  removeTask: (task: TaskModel) => Promise<void>;\r\n  getAndSetProjectDataFromId: (project_id: string) => Promise<boolean>;\r\n}\r\n\r\nconst ProjectContext = createContext<ProjectContextProps>({} as ProjectContextProps);\r\n\r\nconst ProjectProvider: React.FC = ({ children }) => {\r\n  const [project, setProject] = useState<ProjectModel>({} as ProjectModel);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [months, setMonths] = useState<Month[]>([]);\r\n\r\n  const { database } = useDatabase();\r\n\r\n  useEffect(() => {\r\n    if (tasks.length > 0) {\r\n      const monthList = getMonthListFromTaskList(tasks);\r\n      setMonths(monthList);\r\n    }\r\n  }, [tasks]);\r\n\r\n  async function editProject(newProjectData: ProjectDTO): Promise<boolean> {\r\n    try {\r\n      await database.action(async () => {\r\n        const updatedProject = await project.update((projectData) => {\r\n          projectData.title = newProjectData.title;\r\n          projectData.subtitle = newProjectData.subtitle;\r\n          projectData.emoji = newProjectData.emoji;\r\n        });\r\n\r\n        setProject(updatedProject);\r\n      });\r\n\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async function deleteProject(selectedProject: ProjectModel): Promise<boolean> {\r\n    try {\r\n      const projectTasks = await selectedProject.tasks.fetch();\r\n\r\n      await database.action(async () => {\r\n        await selectedProject.destroyPermanently();\r\n        projectTasks.map(async (task: any) => {\r\n          await task.destroyPermanently();\r\n        });\r\n      });\r\n\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async function getTaskData(id: string) {\r\n    const taskData = await database.get<TaskModel>('tasks').find(id);\r\n\r\n    return taskData;\r\n  }\r\n\r\n  async function addNewTask(task: Task, project_id: string) {\r\n    await database.action(async () => {\r\n      const createdTask = await database.get<TaskModel>('tasks').create((newTask) => {\r\n        newTask.name = task.name;\r\n        newTask.color = task.color;\r\n        newTask.start = task.start;\r\n        newTask.end = task.end;\r\n        newTask.project.id = project_id;\r\n      });\r\n\r\n      setTasks(sortTaskList([...tasks, createdTask]));\r\n    });\r\n  }\r\n\r\n  async function editTask(newTaskData: Task, task_id: string) {\r\n    await database.action(async () => {\r\n      const selectedTask = await getTaskData(task_id);\r\n      await selectedTask.update((taskData) => {\r\n        taskData.name = newTaskData.name;\r\n        taskData.color = newTaskData.color;\r\n        taskData.start = newTaskData.start;\r\n        taskData.end = newTaskData.end;\r\n      });\r\n\r\n      setTasks(sortTaskList([...tasks]));\r\n    });\r\n  }\r\n\r\n  async function removeTask(task: TaskModel) {\r\n    await database.action(async () => {\r\n      await task.destroyPermanently();\r\n      setTasks(tasks.filter((item) => task.id !== item.id));\r\n    });\r\n  }\r\n\r\n  async function getAndSetProjectDataFromId(project_id: string): Promise<boolean> {\r\n    try {\r\n      const projectData = await database.get<ProjectModel>('projects').find(project_id);\r\n      const projectTasks = await projectData.tasks.fetch();\r\n\r\n      setProject(projectData);\r\n      setTasks(sortTaskList(projectTasks));\r\n\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ProjectContext.Provider value={{\r\n      tasks,\r\n      months,\r\n      project,\r\n      setTasks,\r\n      setMonths,\r\n      setProject,\r\n      getTaskData,\r\n      editProject,\r\n      deleteProject,\r\n      addNewTask,\r\n      editTask,\r\n      removeTask,\r\n      getAndSetProjectDataFromId,\r\n    }}\r\n    >\r\n      {children}\r\n    </ProjectContext.Provider>\r\n  );\r\n};\r\n\r\nfunction useProject(): ProjectContextProps {\r\n  const context = useContext(ProjectContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useProject must be used within a ProjectProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { ProjectProvider, useProject };\r\n","import { Task } from '../contexts/project';\n\nexport type Month = {\n  display: string; // mm/yyyy\n  dayCount: number; // Number of days\n  date: Date;\n};\n\nexport default function getMonthListFromTaskList(tasks: Task[]): Month[] {\n  // On tasks change, reload month list\n  // Get first day of the first month\n  let firstMonthValue: Date = null as unknown as Date;\n  let lastMonthValue: Date = null as unknown as Date;\n\n  tasks.forEach((task) => {\n    if (firstMonthValue === null || task.start.getTime() < firstMonthValue.getTime()) {\n      firstMonthValue = new Date(task.start);\n    }\n    if (lastMonthValue === null || task.end.getTime() > lastMonthValue.getTime()) {\n      lastMonthValue = new Date(task.end);\n    }\n  });\n\n  // Set first day\n  firstMonthValue.setDate(1);\n  lastMonthValue.setDate(1);\n\n  // Get month list\n  const monthList: Month[] = [];\n\n  while (firstMonthValue <= lastMonthValue) {\n    const year = firstMonthValue.getFullYear();\n    const month = firstMonthValue.getMonth();\n\n    monthList.push({\n      display: `${month + 1}/${year}`,\n      dayCount: new Date(year, month + 1, 0).getDate(),\n      date: new Date(year, month, 1),\n    });\n\n    // Add one month\n    firstMonthValue = new Date(firstMonthValue.setMonth(month + 1));\n  }\n\n  return monthList;\n}\n","import React from 'react';\r\nimport { Task } from '../contexts/project';\r\n\r\nimport '../styles/pages/Home.css';\r\nimport getDayCount from '../utils/getDayCount';\r\n\r\ninterface TaskInfoProps {\r\n  task: Task;\r\n}\r\n\r\nexport const TaskInfo: React.FC<TaskInfoProps> = ({ task }) => (\r\n  <div\r\n    className=\"flex flex-row items-center text-left w-full h-14 px-4 border-l-4\"\r\n    style={{ borderColor: task.color }}\r\n  >\r\n    <div className=\"flex flex-row items-center flex-1\">\r\n      <strong className=\"text-base text-gray-600 dark:text-gray-300 ml-1 sm:inline hidden\">{task.name}</strong>\r\n    </div>\r\n    <div className=\"flex flex-row items-center w-24 pl-3\">\r\n      <span className=\"w-full text-base text-gray-400 hidden sm:inline\">\r\n        {getDayCount(task.start, task.end)}\r\n      </span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default TaskInfo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Task } from '../contexts/project';\r\nimport getDayCount from '../utils/getDayCount';\r\nimport getTextColorFromBackgroundColor from '../utils/getTextColorFromBackgroundColor';\r\n\r\ninterface TaskItemProps {\r\n  task: Task;\r\n  daySize: number;\r\n  firstTimelineDay?: Date | undefined;\r\n  tabIndex: number;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst TaskItem: React.FC<TaskItemProps> = ({\r\n  task, daySize, firstTimelineDay, tabIndex, onClick = () => {},\r\n}) => {\r\n  const [width, setWidth] = useState(0);\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  const textColor = getTextColorFromBackgroundColor(task.color);\r\n\r\n  useEffect(() => {\r\n    // Get day count\r\n    const dayCount: number = getDayCount(task.start, task.end);\r\n\r\n    setWidth(dayCount * daySize);\r\n  }, [task, daySize]);\r\n\r\n  useEffect(() => {\r\n    // Offset\r\n    if (firstTimelineDay !== undefined) {\r\n      const dayCount: number = getDayCount(firstTimelineDay, task.start);\r\n\r\n      setOffset((dayCount * daySize) - daySize);\r\n    }\r\n  }, [firstTimelineDay, daySize]);\r\n\r\n  return (\r\n    <div\r\n      key={task.name}\r\n      className=\"relative flex flex-col items-center text-lef h-14 py-0.5\"\r\n      style={daySize !== 0 ? { width: `${width}rem`, marginLeft: `${offset}rem` } : { width: '100%' }}\r\n    >\r\n      <div\r\n        className=\"w-full h-full flex flex-col justify-center px-3 rounded-md transition-all\"\r\n        style={{ backgroundColor: task.color }}\r\n        onClick={onClick}\r\n        onKeyDown={onClick}\r\n        role=\"button\"\r\n        tabIndex={tabIndex}\r\n      >\r\n        <strong className={`text-sm whitespace-nowrap overflow-hidden overflow-ellipsis ${textColor === 'black' ? 'text-gray-800' : 'text-gray-200'}`}>{task.name}</strong>\r\n        <span className={`text-xs whitespace-nowrap overflow-hidden overflow-ellipsis ${textColor === 'black' ? 'text-gray-700' : 'text-gray-300'}`}>\r\n          {`${task.start.toLocaleDateString(undefined, { month: '2-digit', day: '2-digit' })} - \r\n          ${task.end.toLocaleDateString(undefined, { month: '2-digit', day: '2-digit' })}`}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport ScrollContainer from 'react-indiana-drag-scroll';\n\nimport '../styles/components/TaskTimeline.css';\n\ninterface TaskTimelineContainerProps {\n  container?: 'div' | 'scroll';\n  [x: string]: any\n}\n\nconst TaskTimelineContainer: React.FC<TaskTimelineContainerProps> = ({ container = 'scroll', children, ...props }) => (\n  container === 'scroll' ? (\n    <ScrollContainer {...props}>\n      {children}\n    </ScrollContainer>\n  ) : (\n    <div {...props}>\n      {children}\n    </div>\n  )\n);\n\nexport default TaskTimelineContainer;\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useProject } from '../contexts/project';\r\n\r\nimport TaskInfo from './TaskInfo';\r\nimport TaskItem from './TaskItem';\r\nimport TaskTimelineContainer from './TaskTimelineContainer';\r\n\r\nimport '../styles/components/TaskTimeline.css';\r\n\r\ninterface TaskTimelineProps {\r\n  container?: 'div' | 'scroll';\r\n  daySize?: number;\r\n}\r\n\r\nconst TaskTimeline: React.FC<TaskTimelineProps> = ({ container = 'scroll', daySize = 1.2 }) => {\r\n  const history = useHistory();\r\n  const { project, tasks, months } = useProject();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row mt-4 rounded-lg bg-white dark:bg-gray-800 border-2 border-gray-200 dark:border-gray-700\">\r\n        {tasks.length === 0 && (\r\n          <span className=\"p-4 w-full text-center text-gray-400\">No task found. Register one to get started!</span>\r\n        )}\r\n        {tasks.length > 0 && (\r\n        <>\r\n          <aside className=\"taskList pb-1 w-1 sm:max-w-md sm:w-full border-r-2 border-transparent sm:border-gray-200 sm:dark:border-gray-700\">\r\n            <div className=\"flex items-center text-left w-full h-14 px-4 border-b-2 border-gray-200 dark:border-gray-700\">\r\n              <strong className=\"flex-1 text-gray-400 hidden sm:inline\">Task name</strong>\r\n              <strong className=\"w-24 text-gray-400 hidden sm:inline pl-3\">Work Days</strong>\r\n            </div>\r\n            {tasks.map((task) => (\r\n              <TaskInfo key={task.name} task={task} />\r\n            ))}\r\n          </aside>\r\n\r\n          <TaskTimelineContainer container={container} className=\"TaskTimeline flex flex-col w-full\">\r\n            {months.length !== 0 && (\r\n              <>\r\n                <header className=\"flex flex-row w-max items-center h-14 px-4 border-b-2 border-gray-200 dark:border-gray-700\">\r\n                  {months.map((month) => (\r\n                    <div key={month.display} className=\"flex flex-col\" style={{ minWidth: `${daySize * month.dayCount}rem` }}>\r\n                      <div className=\"flex items-center text-left w-full\">\r\n                        <strong className=\"flex-1 text-gray-400\">{month.display}</strong>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </header>\r\n                <div className=\"relative flex flex-row flex-1 mx-4\">\r\n                  <div className=\"absolute top-0 left-0\">\r\n                    {tasks.map((task, index) => (\r\n                      <TaskItem\r\n                        key={task.name}\r\n                        task={task}\r\n                        daySize={daySize}\r\n                        firstTimelineDay={months[0].date}\r\n                        tabIndex={index + 5}\r\n                        onClick={() => {\r\n                          history.push(`/project/${project.id}/task/${task.id}`);\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                  {months.map((month) => (\r\n                    <div\r\n                      key={month.display}\r\n                      className=\"monthBox flex flex-row h-full border-gray-300 dark:border-gray-500 border-dashed\"\r\n                      style={{ minWidth: `${daySize * month.dayCount}rem` }}\r\n                    >\r\n                      {Array(month.dayCount).fill('').map((value, index) => (\r\n                        <div\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={index}\r\n                          className=\"dayBox h-full border-gray-100 dark:border-gray-700\"\r\n                          style={{ minWidth: `${daySize}rem` }}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            )}\r\n          </TaskTimelineContainer>\r\n        </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskTimeline;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { HTMLProps, useState } from 'react';\r\nimport { FiChevronDown } from 'react-icons/fi';\r\n\r\nimport '../../styles/components/Select.css';\r\n\r\ninterface SelectProps extends HTMLProps<HTMLSelectElement> {\r\n  // eslint-disable-next-line no-unused-vars\r\n  setValue: (value: number) => void;\r\n  options: {\r\n    [key: string]: number\r\n  }\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  value, options, setValue,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={`select-container flex-col w-full relative ${isOpen ? 'active' : ''}`}>\r\n      <button\r\n        onClick={() => { setIsOpen(!isOpen); }}\r\n        onBlur={() => {\r\n          // Delay to execute other event\r\n          setTimeout(() => {\r\n            setIsOpen(false);\r\n          }, 150);\r\n        }}\r\n        className=\"select-button flex flex-row items-center w-full px-2 py-2 bg-white border-gray-400 border-2 rounded-md\"\r\n      >\r\n        <span className=\"text-base flex-1 px-7\">\r\n          {Object.keys(options).find((key: string) => options[key] === value)}\r\n        </span>\r\n        <FiChevronDown className=\"text-lg\" />\r\n      </button>\r\n      <div className={`select-options flex w-full flex-col z-50 items-center justify-center border-2 border-t-0 rounded-md bg-white border-gray-400 ${!isOpen ? 'hidden' : 'absolute'}`}>\r\n        {Object.keys(options).map((key: string) => (\r\n          <button\r\n            key={key}\r\n            className=\"select-option py-0.5 w-full hover:text-gray-100\"\r\n            onClick={() => {\r\n              setValue(options[key]);\r\n            }}\r\n          >\r\n            <span className=\"text-center\">{key}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Picker } from 'emoji-mart';\r\nimport {\r\n  FiDownload, FiPlus, FiCheck, FiX, FiZoomIn,\r\n} from 'react-icons/fi';\r\nimport Swal from 'sweetalert2';\r\n\r\n// Components\r\nimport Header from '../components/Header';\r\nimport TaskTimeline from '../components/TaskTimeline';\r\n\r\n// Contexts\r\nimport { useProject } from '../contexts/project';\r\n\r\n// Styles\r\nimport '../styles/pages/Project.css';\r\nimport Button from '../components/form/Button';\r\nimport useDarkTheme from '../hooks/useDarkTheme';\r\nimport Select from '../components/form/Select';\r\n\r\nfunction Project() {\r\n  const [daySize, setDaySize] = useState(1.2);\r\n  const [emojiMenuIsOpen, setEmojiMenuIsOpen] = useState(false);\r\n  const [showUpdateConfirmationButton, setShowUpdateConfirmationButton] = useState(false);\r\n  const [projectEmoji, setProjectEmoji] = useState('');\r\n  const [projectTitle, setProjectTitle] = useState('');\r\n  const [projectDescription, setProjectDescription] = useState('');\r\n\r\n  const { id: project_id } = useParams<{ id: string }>();\r\n  const { darkTheme } = useDarkTheme();\r\n\r\n  const {\r\n    project, getAndSetProjectDataFromId, editProject, tasks,\r\n  } = useProject();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function setProjectData() {\r\n      // If project isn't already loaded\r\n      if (project.id !== project_id) {\r\n        const success = await getAndSetProjectDataFromId(project_id);\r\n\r\n        if (!success) {\r\n          history.push('/');\r\n        }\r\n      }\r\n    }\r\n    setProjectData();\r\n  }, [project_id]);\r\n\r\n  useEffect(() => {\r\n    if (project.title) {\r\n      setProjectEmoji(project.emoji);\r\n      setProjectTitle(project.title);\r\n      setProjectDescription(project.subtitle);\r\n    }\r\n  }, [project]);\r\n\r\n  useEffect(() => {\r\n    const { title, subtitle, emoji } = project;\r\n\r\n    if (projectTitle !== title || projectDescription !== subtitle || projectEmoji !== emoji) {\r\n      setShowUpdateConfirmationButton(true);\r\n    } else {\r\n      setShowUpdateConfirmationButton(false);\r\n    }\r\n  }, [projectTitle, projectDescription, projectEmoji]);\r\n\r\n  async function submitProjectDataUpdate() {\r\n    if (projectTitle.length <= 2) {\r\n      Swal.fire({\r\n        title: 'Warning!',\r\n        text: 'Project title should have, at least, 3 characters',\r\n        icon: 'warning',\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const updateSuccess = await editProject({\r\n      ...project,\r\n      title: projectTitle,\r\n      subtitle: projectDescription,\r\n      emoji: projectEmoji,\r\n    });\r\n\r\n    if (updateSuccess) {\r\n      setShowUpdateConfirmationButton(false);\r\n\r\n      Swal.fire(\r\n        'Updated!',\r\n        'Project data updated successfully!',\r\n        'success',\r\n      );\r\n    } else {\r\n      Swal.fire(\r\n        'Error!',\r\n        'Sorry, an error ocurred...',\r\n        'error',\r\n      );\r\n    }\r\n  }\r\n\r\n  function cancelProjectDataUpdate() {\r\n    setProjectTitle(project.title);\r\n    setProjectDescription(project.subtitle);\r\n    setProjectEmoji(project.emoji);\r\n  }\r\n\r\n  function handleNavigateToNewTask() {\r\n    history.push(`/project/${project_id}/task`);\r\n  }\r\n\r\n  function handleExportDiagram() {\r\n    history.push(`/export/${project_id}`);\r\n  }\r\n\r\n  return (\r\n    <section id=\"project\" className=\"flex flex-col items-center w-full min-h-screen\">\r\n      {project && (\r\n      <>\r\n        <Header projectId={project_id} backTo=\"/\">\r\n          <div\r\n            id=\"logo\"\r\n            className=\"flex justify-center items-center h-10 w-10 ml-4 rounded-md relative\"\r\n            style={{ backgroundColor: 'var(--primary-purple)' }}\r\n          >\r\n            <button onClick={() => setEmojiMenuIsOpen(!emojiMenuIsOpen)}>\r\n              {projectEmoji}\r\n            </button>\r\n            <Picker\r\n              style={{\r\n                position: 'absolute',\r\n                top: '0px',\r\n                left: '40px',\r\n                display: emojiMenuIsOpen ? 'initial' : 'none',\r\n              }}\r\n              title=\"\"\r\n              native\r\n              emoji={projectEmoji}\r\n              onSelect={(emoji: any) => {\r\n                setProjectEmoji(emoji.native ?? '🚀');\r\n                setEmojiMenuIsOpen(false);\r\n              }}\r\n              showPreview={false}\r\n              theme={darkTheme ? 'dark' : 'light'}\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-row\">\r\n            {projectTitle && (\r\n              <>\r\n                <div className=\"ml-2 flex flex-col justify-center\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"font-serif text-base dark:text-gray-300 bg-transparent\"\r\n                    value={projectTitle}\r\n                    maxLength={22}\r\n                    minLength={2}\r\n                    onChange={(event) => setProjectTitle(event.currentTarget.value)}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"text-sm font-light dark:text-gray-300 bg-transparent\"\r\n                    value={projectDescription}\r\n                    onChange={(event) => setProjectDescription(event.currentTarget.value)}\r\n                  />\r\n                </div>\r\n                {showUpdateConfirmationButton && (\r\n                <div className=\"flex flex-row justify-center items-center\">\r\n                  <FiCheck className=\"text-green-600 text-2xl cursor-pointer\" onClick={submitProjectDataUpdate} />\r\n                  <FiX className=\"text-red-600 text-2xl cursor-pointer\" onClick={cancelProjectDataUpdate} />\r\n                </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Header>\r\n\r\n        <main className=\"p-4 w-full max-w-screen-2xl\">\r\n\r\n          <header className=\"flex flex-row-reverse\">\r\n            <div className=\"flex flex-row gap-2\">\r\n              {tasks.length > 0 && (\r\n                <Button className=\"max-w-max\" type=\"button\" onClick={handleExportDiagram} primary>\r\n                  <FiDownload color=\"#fff\" size={18} />\r\n                  <span className=\"text-sm ml-1 text-white\">Export</span>\r\n                </Button>\r\n              )}\r\n              <Button className=\"max-w-max\" type=\"button\" onClick={handleNavigateToNewTask} primary>\r\n                <FiPlus color=\"#fff\" size={18} />\r\n                <span className=\"text-sm ml-1 text-white\">Add Task</span>\r\n              </Button>\r\n            </div>\r\n          </header>\r\n\r\n          <div className=\"w-full flex flex-row-reverse items-center pt-4\">\r\n            <div className=\"w-36\">\r\n              <Select\r\n                value={daySize}\r\n                setValue={setDaySize}\r\n                options={{\r\n                  '80%': 0.8,\r\n                  '90%': 0.9,\r\n                  '100%': 1,\r\n                  '110%': 1.1,\r\n                  '120%': 1.2,\r\n                }}\r\n              />\r\n            </div>\r\n            <FiZoomIn className=\"text-2xl mx-2 dark:text-gray-300\" />\r\n          </div>\r\n          <TaskTimeline container=\"scroll\" daySize={daySize} />\r\n        </main>\r\n      </>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { HTMLProps } from 'react';\n\ninterface InputFieldProps extends HTMLProps<HTMLInputElement> {\n  id: string;\n  label: string;\n  isChecked: boolean;\n  // eslint-disable-next-line no-unused-vars\n  setIsChecked: (arg0: boolean) => void;\n}\n\nconst ToggleSwitch: React.FC<InputFieldProps> = ({\n  id, label, isChecked, setIsChecked, ...props\n}) => (\n  <div className=\"flex flex-col py-2\">\n    <div className=\"cursor-pointer\">\n      <label htmlFor={id} className=\"cursor-pointer flex items-center\">\n        <span className=\"text-lg flex-1 dark:text-gray-400\">{label}</span>\n        <div\n          className=\"w-10 h-6 flex items-center bg-gray-300 rounded-full p-1 transition duration-300 ease-in-out\"\n          style={isChecked ? { backgroundColor: '#a143b4' } : undefined}\n        >\n          <div className={`bg-white w-4 h-4 rounded-full shadow-md transform duration-300 ease-in-out ${isChecked ? 'translate-x-4' : ''}`} />\n        </div>\n      </label>\n      <input\n        id={id}\n        type=\"checkbox\"\n        className=\"hidden\"\n        checked={isChecked}\n        onChange={(event) => setIsChecked(event.currentTarget.checked)}\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nexport default ToggleSwitch;\n","import React from 'react';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\nimport ToggleSwitch from '../components/form/ToggleSwitch';\nimport SimpleActionButton from '../components/SimpleActionButton';\nimport SimpleHeader from '../components/SimpleHeader';\nimport useDarkTheme from '../hooks/useDarkTheme';\n\nimport '../styles/pages/Create.css';\n\nconst Settings: React.FC = ({ children }) => {\n  const { darkTheme, setDarkTheme } = useDarkTheme();\n\n  const history = useHistory();\n\n  return (\n    <div className=\"flex justify-center items-center dark:bg-black w-full min-h-screen h-full\">\n      <section id=\"settings\" className=\"max-w-sm w-full px-4\">\n        <SimpleHeader>\n          <SimpleActionButton icon={FiArrowLeft} onClick={() => history.goBack()} />\n        </SimpleHeader>\n        <div className=\"w-full pt-4 pb-6\">\n          <h1 className=\"text-4xl font-semibold text-gray-700 dark:text-gray-300\">Settings</h1>\n          <ToggleSwitch id=\"toggle-dark-theme\" label=\"Dark Theme\" isChecked={darkTheme} setIsChecked={setDarkTheme} />\n          {children}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Settings;\n","import { useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\nimport Settings from './Settings';\n\nimport { useProject } from '../contexts/project';\n\nfunction ProjectSettings() {\n  const history = useHistory();\n\n  const { project, deleteProject } = useProject();\n\n  async function handleDeleteProject() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        if (deleteProject(project)) {\n          Swal.fire(\n            'Deleted!',\n            'Project delete successfully!',\n            'success',\n          );\n\n          history.push('/');\n        } else {\n          Swal.fire(\n            'Error!',\n            'Sorry, an error ocurred...',\n            'error',\n          );\n        }\n      }\n    });\n  }\n\n  return (\n    <Settings>\n      <button\n        className=\"w-full flex justify-center items-center bg-red-500 py-3 rounded-md transition-all hover:opacity-80\"\n        onClick={handleDeleteProject}\n      >\n        <span className=\"text-base text-gray-100\">Delete Project</span>\n      </button>\n    </Settings>\n  );\n}\n\nexport default ProjectSettings;\n","import { useEffect, useRef } from 'react';\r\nimport { FiDownload } from 'react-icons/fi';\r\nimport Swal from 'sweetalert2';\r\nimport html2canvas from 'html2canvas';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Contexts\r\nimport { useProject } from '../contexts/project';\r\n\r\n// Components\r\nimport TaskTimeline from '../components/TaskTimeline';\r\nimport Header from '../components/Header';\r\n\r\nfunction Export() {\r\n  const timelineRef = useRef<HTMLDivElement>(null);\r\n  const { project } = useProject();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!project.title) {\r\n      history.push('/');\r\n    }\r\n  }, []);\r\n\r\n  async function createDiagramImage() {\r\n    if (timelineRef.current) {\r\n      const canvas = await html2canvas(timelineRef.current, {\r\n        scale: 1.5,\r\n        allowTaint: true,\r\n        useCORS: true,\r\n      });\r\n\r\n      const data = canvas.toDataURL('image/png');\r\n      const newData = data.replace(/^data:image\\/png/, 'data:application/octet-stream');\r\n\r\n      return newData;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  function downloadImage(url: string) {\r\n    // Creating new link node.\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `${project.title?.split(' ').join('-')}.png`;\r\n\r\n    // Dispatching click event.\r\n    if (document.createEvent) {\r\n      const e = document.createEvent('MouseEvents');\r\n      e.initEvent('click', true, true);\r\n      link.dispatchEvent(e);\r\n    }\r\n  }\r\n\r\n  async function handleDownloadImage() {\r\n    Swal.fire({\r\n      title: 'Loading your Diagram',\r\n      html: 'Please wait...',\r\n      onOpen: () => {\r\n        setTimeout(async () => {\r\n          const data = await createDiagramImage();\r\n          downloadImage(data);\r\n\r\n          Swal.fire({\r\n            title: 'Exported!',\r\n            html: 'Your diagram has been exported!',\r\n          });\r\n        }, 300);\r\n      },\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <section id=\"project\" className=\"flex flex-col items-center w-full min-h-screen\">\r\n      <Header\r\n        projectId={project.id}\r\n        backTo={`/project/${project.id}`}\r\n      >\r\n        <div className=\"flex w-full flex-1 px-4\">\r\n          <div\r\n            id=\"logo\"\r\n            className=\"flex justify-center items-center h-10 w-10 rounded-md\"\r\n            style={{ backgroundColor: 'var(--primary-purple)' }}\r\n          >\r\n            {project.emoji}\r\n          </div>\r\n          <div className=\"ml-2 flex flex-1 flex-col justify-center\">\r\n            <h1 className=\"font-serif text-base dark:text-gray-300\">{project.title}</h1>\r\n            <span className=\"text-sm font-light dark:text-gray-300\">{project.subtitle}</span>\r\n          </div>\r\n          <button className=\"button primary w-36 h-full flex justify-center items-center shadow-md\" onClick={handleDownloadImage}>\r\n            <FiDownload color=\"#fff\" size={18} />\r\n            <span className=\"text-sm ml-1 text-white\">Download</span>\r\n          </button>\r\n        </div>\r\n      </Header>\r\n      <div className=\"flex flex-col w-full items-start overflow-x-auto\">\r\n        <div className=\"w-full p-3\">\r\n          <h1 className=\"text-4xl font-semibold text-gray-700 dark:text-gray-300\">Preview</h1>\r\n        </div>\r\n        <div ref={timelineRef} className=\"toCanvas w-max p-3 dark:bg-black\">\r\n          <div className=\"flex flex-row\">\r\n            <div\r\n              className=\"flex justify-center items-center h-10 w-10 ml-0 rounded-md\"\r\n              style={{ backgroundColor: 'var(--primary-purple)' }}\r\n            >\r\n              {project.emoji}\r\n            </div>\r\n            <div className=\"ml-2 flex flex-col justify-center\">\r\n              <h1 className=\"font-serif text-base dark:text-gray-300\">{project.title}</h1>\r\n              <span className=\"text-sm font-light dark:text-gray-300\">{project.subtitle}</span>\r\n            </div>\r\n          </div>\r\n          <TaskTimeline container=\"div\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Export;\r\n","import { FC } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ntype Props = {\n  slide?: number\n  slideUp?: number\n  isActive: boolean\n}\n\nconst OpenIn: FC<Props> = ({ children, isActive = false }) => (\n  <AnimatePresence>\n    {isActive && (\n      <motion.div\n        exit={{ opacity: 0, height: 0, overflow: 'hidden' }}\n        initial={{ opacity: 0, height: 0, overflow: 'hidden' }}\n        animate={{ opacity: 1, height: 'auto', overflow: 'visible' }}\n      >\n        {children}\n      </motion.div>\n    )}\n  </AnimatePresence>\n);\n\nexport default OpenIn;\n","import React from 'react';\r\n\r\nimport '../styles/components/Modal.css';\r\nimport OpenIn from './animated/OpenIn';\r\n\r\ninterface ModalProps {\r\n  modalIsOpen: boolean;\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({ children, modalIsOpen }) => (\r\n  <OpenIn isActive={modalIsOpen}>\r\n    <div id=\"Modal\" className=\"absolute flex items-center justify-center overflow-y-auto z-30 p-4 pt-0\">\r\n      <div className=\"max-w-lg w-full\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </OpenIn>\r\n);\r\n\r\nexport default Modal;\r\n","import { FormEvent, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\nimport { FiX } from 'react-icons/fi';\nimport { VscSymbolColor } from 'react-icons/vsc';\n\n// Components\nimport { SketchPicker } from 'react-color';\nimport InputField from '../components/form/InputField';\nimport SimpleHeader from '../components/SimpleHeader';\nimport SimpleActionButton from '../components/SimpleActionButton';\nimport Modal from '../components/Modal';\nimport TaskItem from '../components/TaskItem';\nimport Button from '../components/form/Button';\n\n// Contexts\nimport { Task, useProject } from '../contexts/project';\n\n// Styles\nimport '../styles/pages/Create.css';\nimport 'emoji-mart/css/emoji-mart.css';\n\n// Utils\nimport getTextColorFromBackgroundColor from '../utils/getTextColorFromBackgroundColor';\n\nfunction TaskPage() {\n  const { id: project_id } = useParams<{ id: string }>();\n  const defaultDate = new Date(new Date().setHours(0, 0, 0, 0));\n\n  const [colorModalIsOpen, setColorModalIsOpen] = useState(false);\n  const [title, setTitle] = useState('');\n  const [color, setColor] = useState('#00bcd4');\n  const [start, setStart] = useState(defaultDate);\n  const [end, setEnd] = useState(defaultDate);\n\n  const history = useHistory();\n  const { task_id } = useParams<{ task_id?: string }>();\n  const {\n    getTaskData, addNewTask, editTask, removeTask,\n  } = useProject();\n\n  useEffect(() => {\n    async function setTaskData(id: string) {\n      const taskData = await getTaskData(id);\n\n      setTitle(taskData.name);\n      setColor(taskData.color);\n      setStart(taskData.start);\n      setEnd(taskData.end);\n    }\n    if (task_id) {\n      setTaskData(task_id);\n    }\n  }, []);\n\n  function toggleColorModal() {\n    setColorModalIsOpen(!colorModalIsOpen);\n  }\n\n  function returnToProjectPage() {\n    history.push(`/project/${project_id}`);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  function handleDateChange(event: FormEvent<HTMLInputElement>, setValue: (date: any) => void) {\n    try {\n      const { value } = event.currentTarget;\n\n      setValue(new Date(`${value} 00:00`));\n    } catch (error) {\n      setValue((oldDate: any) => oldDate);\n    }\n  }\n\n  function handleRemoveTask() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        if (task_id) {\n          const taskData = await getTaskData(task_id);\n          await removeTask(taskData);\n\n          history.push(`/project/${project_id}`);\n        }\n\n        Swal.fire({\n          title: 'Deleted!',\n          text: 'Task deleted from project',\n          icon: 'success',\n        });\n      } else {\n        Swal.fire({\n          title: 'Oopps...',\n          text: 'We had an error deleting this task',\n          icon: 'error',\n        });\n      }\n    });\n  }\n\n  function handleSubmitNewTask(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    const task: Task = {\n      name: title,\n      color,\n      start,\n      end,\n    };\n\n    if (!task_id) {\n      addNewTask(task, project_id);\n    } else {\n      editTask(task, task_id);\n    }\n\n    returnToProjectPage();\n  }\n\n  return (\n    <div className=\"flex justify-center items-center w-full min-h-screen overflow-y-auto px-4\">\n      <section id=\"create\" className=\"max-w-lg w-full px-4\">\n        <SimpleHeader>\n          <h1 className=\"text-3xl font-semibold text-gray-700 dark:text-gray-300\">\n            {!task_id ? 'Create new Task' : 'Edit Task'}\n          </h1>\n          <SimpleActionButton icon={FiX} onClick={returnToProjectPage} />\n        </SimpleHeader>\n        <form onSubmit={handleSubmitNewTask}>\n          <div className=\"w-full pb-6\">\n            <div className=\"flex flex-row w-full\">\n              <div className=\"flex flex-row md:flex-col justify-around items-center pr-2\">\n                <input type=\"hidden\" name=\"color\" value={color} />\n                <button\n                  className=\"h-12 w-full px-2 flex justify-center items-center rounded-md\"\n                  type=\"button\"\n                  style={{ backgroundColor: color }}\n                  onClick={toggleColorModal}\n                >\n                  <VscSymbolColor className={`text-3xl ${getTextColorFromBackgroundColor(color) === 'black' ? 'text-gray-800' : 'text-gray-200'}`} />\n                </button>\n                {colorModalIsOpen && (\n                  <Modal\n                    modalIsOpen={colorModalIsOpen}\n                  >\n                    <SimpleHeader>\n                      <div />\n                      <SimpleActionButton icon={FiX} onClick={() => setColorModalIsOpen(!colorModalIsOpen)} />\n                    </SimpleHeader>\n                    <SketchPicker color={color} onChange={(value) => setColor(value.hex)} />\n                  </Modal>\n                )}\n              </div>\n              <div className=\"flex flex-1\">\n                <TaskItem\n                  task={{\n                    name: title || 'Planning',\n                    start,\n                    end,\n                    color,\n                  }}\n                  tabIndex={-1}\n                  daySize={0}\n                />\n              </div>\n            </div>\n            <InputField\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Ex: Planning\"\n              label=\"Title\"\n              value={title}\n              onChange={(event) => setTitle(event.currentTarget.value)}\n              required\n            />\n            <div className=\"flex flex-col md:grid md:grid-cols-2 md:gap-2\">\n              <InputField\n                id=\"start\"\n                name=\"start\"\n                type=\"date\"\n                label=\"Start\"\n                value={start.toISOString().split('T')[0]}\n                onChange={(event) => handleDateChange(event, setStart)}\n                onKeyDown={(event) => { event.preventDefault(); }}\n                required\n              />\n              <InputField\n                id=\"end\"\n                name=\"end\"\n                type=\"date\"\n                label=\"End\"\n                value={end.toISOString().split('T')[0]}\n                onChange={(event) => handleDateChange(event, setEnd)}\n                onKeyDown={(event) => { event.preventDefault(); }}\n                required\n              />\n            </div>\n          </div>\n          <footer className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n            {!task_id ? (\n              <>\n                <Button className=\"text-gray-800 dark:text-gray-600\" type=\"reset\" style={{ backgroundColor: '#dde9f3' }}>\n                  Clear\n                </Button>\n                <Button className=\"text-white\" type=\"submit\" primary>\n                  Create\n                </Button>\n              </>\n            ) : (\n              <>\n                <Button className=\"bg-red-500 text-white\" type=\"button\" onClick={handleRemoveTask}>\n                  Remove\n                </Button>\n                <Button className=\"text-white\" type=\"submit\" primary>\n                  Save\n                </Button>\n              </>\n            )}\n          </footer>\n        </form>\n      </section>\n    </div>\n  );\n}\n\nexport default TaskPage;\n","import { HashRouter } from 'react-router-dom';\nimport useDarkTheme from './hooks/useDarkTheme';\n\nimport { AnimatedRoutes, RouteTransition } from './components/animated/AnimatedRoutes';\n\nimport Home from './pages/Home';\nimport Create from './pages/Create';\nimport Project from './pages/Project';\nimport Settings from './pages/Settings';\nimport ProjectSettings from './pages/ProjectSettings';\nimport Export from './pages/Export';\nimport NewTask from './pages/Task';\n\nfunction Routes() {\n  // Load theme\n  useDarkTheme();\n\n  return (\n    <HashRouter>\n      <AnimatedRoutes exitBeforeEnter initial={false}>\n        <RouteTransition path=\"/\" exact>\n          <Home />\n        </RouteTransition>\n        <RouteTransition path=\"/create\" exact>\n          <Create />\n        </RouteTransition>\n        <RouteTransition path=\"/project/:id/task/:task_id\" slideUp={80}>\n          <NewTask />\n        </RouteTransition>\n        <RouteTransition path=\"/project/:id/task\" slideUp={80}>\n          <NewTask />\n        </RouteTransition>\n        <RouteTransition path=\"/project/:id\">\n          <Project />\n        </RouteTransition>\n        <RouteTransition path=\"/settings\" exact slideUp={80}>\n          <Settings />\n        </RouteTransition>\n        <RouteTransition path=\"/settings/:id\" slideUp={80}>\n          <ProjectSettings />\n        </RouteTransition>\n        <RouteTransition path=\"/export/:id\">\n          <Export />\n        </RouteTransition>\n      </AnimatedRoutes>\n    </HashRouter>\n  );\n}\n\nexport default Routes;\n","import Routes from './routes';\r\n\r\nimport { DatabaseProvider } from './contexts/database';\r\nimport { ProjectProvider } from './contexts/project';\r\n\r\nimport './styles/global.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <DatabaseProvider>\r\n      <ProjectProvider>\r\n        <Routes />\r\n      </ProjectProvider>\r\n    </DatabaseProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { registerServiceWorker } from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\nregisterServiceWorker();\r\n","/* eslint-disable no-unused-vars */\n// eslint-disable-next-line import/prefer-default-export\nexport const registerServiceWorker = () => {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      navigator.serviceWorker.register('/sw.js').then((registration: any) => {\n        // Registration was successful\n        const data = {\n          type: 'CACHE_URLS',\n          payload: [\n            location.href,\n            ...performance.getEntriesByType('resource').map((r) => r.name),\n          ],\n        };\n\n        registration.installing.postMessage(data);\n      }).catch((err) => {\n        // registration failed :(\n        // console.log('ServiceWorker registration failed: ', err);\n      });\n    });\n  }\n};\n"],"sourceRoot":""}